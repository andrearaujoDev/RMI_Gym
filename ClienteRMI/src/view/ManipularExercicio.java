/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import interfaces.InterfaceExercicio;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Exercicio;

/**
 *
 * @author arauj
 */
public class ManipularExercicio extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManipularExercicio
     */
    String ip = "127.0.0.1";
    public ManipularExercicio() {
        initComponents();
        txtID.setEditable(false);
        this.listarExercicio();
    }
    
    public void listarExercicio(){
        DefaultTableModel modelo = (DefaultTableModel)tableExercicio.getModel();
        modelo.setNumRows(0);
        Registry conexao;
        try{
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceExercicio exercicioServico =(InterfaceExercicio) conexao.lookup("exercicio"); 

            for(Exercicio e: exercicioServico.selecionarTodosExercicio()){
                modelo.addRow(new Object[]{      
                e.getId_ex(),
                e.getNome(),
                e.getGrupo_musc(),
                });
            }
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        } 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtGrupoMuscular = new javax.swing.JTextField();
        jcbHabilitarEdicao = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableExercicio = new javax.swing.JTable();

        setClosable(true);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel1.setText("ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 150, 15, 30);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel2.setText("Nome");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 210, 41, 20);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel3.setText("Grupo Muscular");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(300, 210, 111, 20);

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtID);
        txtID.setBounds(30, 150, 60, 30);
        getContentPane().add(txtNome);
        txtNome.setBounds(60, 210, 220, 30);
        getContentPane().add(txtGrupoMuscular);
        txtGrupoMuscular.setBounds(420, 210, 220, 30);

        jcbHabilitarEdicao.setText("Habilitar Edição/Exclusão");
        jcbHabilitarEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbHabilitarEdicaoActionPerformed(evt);
            }
        });
        getContentPane().add(jcbHabilitarEdicao);
        jcbHabilitarEdicao.setBounds(100, 150, 200, 23);

        jButton1.setText("Cadastrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(110, 280, 130, 31);

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(250, 280, 130, 31);

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(390, 280, 130, 31);

        tableExercicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Grupo Muscular"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableExercicio);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(2, 322, 650, 140);

        setBounds(0, 0, 670, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        if(!txtID.getText().equals("")){
            Registry conexao;
            try{
                conexao = LocateRegistry.getRegistry(ip,1100);
                InterfaceExercicio exercicioServico =(InterfaceExercicio) conexao.lookup("exercicio");
                int digitado = Integer.parseInt(txtID.getText());
                for(Exercicio e: exercicioServico.selecionarExercicio(Integer.parseInt(txtID.getText()))){
                    if(digitado == e.getId_ex()){
                        txtNome.setText(e.getNome());
                        txtGrupoMuscular.setText(e.getGrupo_musc());

                    }
                }
            }catch (RemoteException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }catch(NotBoundException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }
        }
    }//GEN-LAST:event_txtIDActionPerformed

    private void jcbHabilitarEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbHabilitarEdicaoActionPerformed
        if(jcbHabilitarEdicao.isSelected()){
            txtID.setEditable(true);
        }else{
            txtID.setEditable(false);
            limparCampos();
        }

    }//GEN-LAST:event_jcbHabilitarEdicaoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Registry conexao;
        try {
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceExercicio exercicioServico =(InterfaceExercicio) conexao.lookup("exercicio");
            Exercicio e = new Exercicio();
            e.setNome(txtNome.getText());
            e.setGrupo_musc(txtGrupoMuscular.getText());
            JOptionPane.showMessageDialog(this, exercicioServico.inserirExercicio(e));
            limparCampos();
            this.listarExercicio();
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor" + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor" + erro.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Registry conexao;
        try {
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceExercicio exercicioServico =(InterfaceExercicio) conexao.lookup("exercicio");
            Exercicio e = new Exercicio();
            e.setId_ex(Integer.parseInt(txtID.getText()));
            e.setNome(txtNome.getText());
            e.setGrupo_musc(txtGrupoMuscular.getText());
            JOptionPane.showMessageDialog(this, exercicioServico.editarExercicio(e));
            limparCampos();
            this.listarExercicio();
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor" + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor" + erro.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Registry conexao;
        try{
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceExercicio exercicioServico =(InterfaceExercicio) conexao.lookup("exercicio");
            JOptionPane.showMessageDialog(this, exercicioServico.excluirExercicio(Integer.parseInt(txtID.getText())));
            limparCampos();
            this.listarExercicio();
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbHabilitarEdicao;
    private javax.swing.JTable tableExercicio;
    private javax.swing.JTextField txtGrupoMuscular;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        txtID.setText("");
        txtNome.setText("");
        txtGrupoMuscular.setText("");
    }
}
