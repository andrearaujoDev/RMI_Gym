/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import interfaces.InterfaceFicha_Exercicio;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Ficha_Exercicio;

/**
 *
 * @author arauj
 */
public class ConsultarDados extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultarDados
     */
    String ip = "127.0.0.1";
    public ConsultarDados() {
        initComponents();
    }
    // Pesquisa por ID
    public void listarFichaExercicio(int idCliente){
        DefaultTableModel modelo = (DefaultTableModel)tabelaExercicios.getModel();
        modelo.setNumRows(0);
        Registry conexao;
        try{
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceFicha_Exercicio fichaExercicioServico =(InterfaceFicha_Exercicio) conexao.lookup("fichaExercicio");
            
            for(Ficha_Exercicio fe: fichaExercicioServico.consultaDados(idCliente)){
                modelo.addRow(new Object[]{
                    fe.getExercicio().getNome(),
                    fe.getExercicio().getGrupo_musc(),
                    fe.getSeries(),
                    fe.getPeso(),
                    fe.getRepeticoes()
                });
            }
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        } 
        
    } 
    //Pesquisa por Nome
    public void listarFichaExercicioNome(String nomeCliente){
        DefaultTableModel modelo = (DefaultTableModel)tabelaExercicios.getModel();
        modelo.setNumRows(0);
        Registry conexao;
        try{
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceFicha_Exercicio fichaExercicioServico =(InterfaceFicha_Exercicio) conexao.lookup("fichaExercicio");
            
            for(Ficha_Exercicio fe: fichaExercicioServico.consultaDadosNome(nomeCliente)){
                modelo.addRow(new Object[]{
                    fe.getExercicio().getNome(),
                    fe.getExercicio().getGrupo_musc(),
                    fe.getSeries(),
                    fe.getPeso(),
                    fe.getRepeticoes()
                });
            }
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        } 
        
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        txtDataInicio = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDataTermino = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNome = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaExercicios = new javax.swing.JTable();
        txtResponsavel = new javax.swing.JLabel();

        setClosable(true);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel1.setText("Consultar por Nome");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(310, 30, 142, 31);

        jtfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIDActionPerformed(evt);
            }
        });
        getContentPane().add(jtfID);
        jtfID.setBounds(130, 30, 160, 31);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel2.setText("Consultar por ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 25, 116, 40);

        jtfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeActionPerformed(evt);
            }
        });
        getContentPane().add(jtfNome);
        jtfNome.setBounds(460, 30, 190, 31);

        txtDataInicio.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        txtDataInicio.setText("...");
        getContentPane().add(txtDataInicio);
        txtDataInicio.setBounds(130, 160, 109, 31);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel4.setText("Data de Termino : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(250, 160, 140, 31);

        txtDataTermino.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        txtDataTermino.setText("...");
        getContentPane().add(txtDataTermino);
        txtDataTermino.setBounds(390, 160, 100, 31);

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel6.setText("Nome : ");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 110, 55, 31);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel7.setText("Responsavel : ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(250, 110, 110, 31);

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel8.setText("Data de Inicio : ");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 160, 110, 31);

        txtNome.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        txtNome.setText("...");
        getContentPane().add(txtNome);
        txtNome.setBounds(80, 110, 140, 31);

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel10.setText("Exercicios");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(270, 250, 70, 31);

        tabelaExercicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Exercicio", "Grupo Muscular", "Series", "Peso", "Repetições"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaExercicios);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 290, 660, 180);

        txtResponsavel.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        txtResponsavel.setText("...");
        getContentPane().add(txtResponsavel);
        txtResponsavel.setBounds(360, 110, 160, 31);

        setBounds(0, 0, 677, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIDActionPerformed
       if(!jtfID.getText().equals("")){
            Registry conexao;
            try{
                conexao = LocateRegistry.getRegistry(ip,1100);
                InterfaceFicha_Exercicio fichaExercicioServico =(InterfaceFicha_Exercicio) conexao.lookup("fichaExercicio");
                int digitado = Integer.parseInt(jtfID.getText());
                for(Ficha_Exercicio fichaExercicio : fichaExercicioServico.consultaDados(digitado)){
                    if(digitado == fichaExercicio.getFicha().getCliente().getId_cli()){
                        txtNome.setText(fichaExercicio.getFicha().getCliente().getNome());
                        txtResponsavel.setText(fichaExercicio.getFicha().getFuncionario().getNome());
                        txtDataInicio.setText(fichaExercicio.getFicha().getData_inicio());
                        txtDataTermino.setText(fichaExercicio.getFicha().getData_termino());
                        listarFichaExercicio(digitado);
                       
                    }
                }
            }catch (RemoteException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }catch(NotBoundException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }
        }
    }//GEN-LAST:event_jtfIDActionPerformed

    private void jtfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeActionPerformed
        if(!jtfNome.getText().equals("")){
            Registry conexao;
            try{
                conexao = LocateRegistry.getRegistry(ip,1100);
                InterfaceFicha_Exercicio fichaExercicioServico =(InterfaceFicha_Exercicio) conexao.lookup("fichaExercicio");
                String digitado = jtfNome.getText();
                for(Ficha_Exercicio fichaExercicio : fichaExercicioServico.consultaDadosNome(digitado)){
                    if(digitado.equals(fichaExercicio.getFicha().getCliente().getNome())){
                        txtNome.setText(fichaExercicio.getFicha().getCliente().getNome());
                        txtResponsavel.setText(fichaExercicio.getFicha().getFuncionario().getNome());
                        txtDataInicio.setText(fichaExercicio.getFicha().getData_inicio());
                        txtDataTermino.setText(fichaExercicio.getFicha().getData_termino());
                        listarFichaExercicioNome(digitado);
                       
                    }
                }
            }catch (RemoteException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }catch(NotBoundException erro){
                System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
            }
        }
    }//GEN-LAST:event_jtfNomeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTable tabelaExercicios;
    private javax.swing.JLabel txtDataInicio;
    private javax.swing.JLabel txtDataTermino;
    private javax.swing.JLabel txtNome;
    private javax.swing.JLabel txtResponsavel;
    // End of variables declaration//GEN-END:variables
}
