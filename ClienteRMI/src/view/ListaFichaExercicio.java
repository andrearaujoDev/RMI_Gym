/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import interfaces.InterfaceFicha;
import interfaces.InterfaceFicha_Exercicio;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.table.DefaultTableModel;
import model.Ficha_Exercicio;
/**
 *
 * @author arauj
 */
public class ListaFichaExercicio extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListaFichaExercicio
     */
    String ip = "127.0.0.1";
    public ListaFichaExercicio() {
        initComponents();
        this.listarFichaExercicio();
    }
    
    public void listarFichaExercicio(){
        DefaultTableModel modelo = (DefaultTableModel)tabelaFichaExercicio.getModel();
        modelo.setNumRows(0);
        Registry conexao;
        try{
            conexao = LocateRegistry.getRegistry(ip,1100);
            InterfaceFicha_Exercicio fichaExercicioServico =(InterfaceFicha_Exercicio) conexao.lookup("fichaExercicio");
            
            for(Ficha_Exercicio fe: fichaExercicioServico.selecionarTodasFichasExercicios()){
                modelo.addRow(new Object[]{
                    fe.getId_ficha_exercicio(),
                    fe.getFicha().getCliente().getNome(),
                    fe.getExercicio().getNome(),
                    fe.getExercicio().getGrupo_musc(),
                    fe.getSeries(),
                    fe.getPeso(),
                    fe.getRepeticoes()
                });
            }
        }catch (RemoteException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        }catch(NotBoundException erro){
            System.out.println("Erro de conexao com o servidor : " + erro.getMessage());
        } 
        
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFichaExercicio = new javax.swing.JTable();

        setClosable(true);

        tabelaFichaExercicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cliente", "Exercicio", "Grupo Muscular", "Series", "Peso", "Repetições"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaFichaExercicio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );

        setBounds(0, 0, 597, 360);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaFichaExercicio;
    // End of variables declaration//GEN-END:variables
}
